//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Spine_Unity_SpineAttributeBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Spine.Unity.SpineAttributeBase), typeof(UnityEngine.PropertyAttribute));
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("dataField", get_dataField, set_dataField);
		L.RegVar("startsWith", get_startsWith, set_startsWith);
		L.RegVar("includeNone", get_includeNone, set_includeNone);
		L.RegVar("fallbackToTextField", get_fallbackToTextField, set_fallbackToTextField);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dataField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			string ret = obj.dataField;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dataField on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startsWith(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			string ret = obj.startsWith;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startsWith on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_includeNone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			bool ret = obj.includeNone;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index includeNone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fallbackToTextField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			bool ret = obj.fallbackToTextField;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fallbackToTextField on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dataField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.dataField = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dataField on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startsWith(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.startsWith = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startsWith on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_includeNone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.includeNone = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index includeNone on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fallbackToTextField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAttributeBase obj = (Spine.Unity.SpineAttributeBase)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.fallbackToTextField = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fallbackToTextField on a nil value");
		}
	}
}

