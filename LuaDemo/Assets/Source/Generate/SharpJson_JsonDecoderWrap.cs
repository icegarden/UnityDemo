//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SharpJson_JsonDecoderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SharpJson.JsonDecoder), typeof(System.Object));
		L.RegFunction("Decode", Decode);
		L.RegFunction("DecodeText", DecodeText);
		L.RegFunction("New", _CreateSharpJson_JsonDecoder);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("errorMessage", get_errorMessage, null);
		L.RegVar("parseNumbersAsFloat", get_parseNumbersAsFloat, set_parseNumbersAsFloat);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSharpJson_JsonDecoder(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SharpJson.JsonDecoder obj = new SharpJson.JsonDecoder();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SharpJson.JsonDecoder.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Decode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SharpJson.JsonDecoder obj = (SharpJson.JsonDecoder)ToLua.CheckObject<SharpJson.JsonDecoder>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object o = obj.Decode(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DecodeText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			object o = SharpJson.JsonDecoder.DecodeText(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_errorMessage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SharpJson.JsonDecoder obj = (SharpJson.JsonDecoder)o;
			string ret = obj.errorMessage;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index errorMessage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_parseNumbersAsFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SharpJson.JsonDecoder obj = (SharpJson.JsonDecoder)o;
			bool ret = obj.parseNumbersAsFloat;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parseNumbersAsFloat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_parseNumbersAsFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SharpJson.JsonDecoder obj = (SharpJson.JsonDecoder)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.parseNumbersAsFloat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parseNumbersAsFloat on a nil value");
		}
	}
}

