//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Spine_Unity_SpineAtlasRegionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Spine.Unity.SpineAtlasRegion), typeof(UnityEngine.PropertyAttribute));
		L.RegFunction("New", _CreateSpine_Unity_SpineAtlasRegion);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("atlasAssetField", get_atlasAssetField, set_atlasAssetField);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSpine_Unity_SpineAtlasRegion(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Spine.Unity.SpineAtlasRegion obj = new Spine.Unity.SpineAtlasRegion();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				Spine.Unity.SpineAtlasRegion obj = new Spine.Unity.SpineAtlasRegion(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Spine.Unity.SpineAtlasRegion.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_atlasAssetField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAtlasRegion obj = (Spine.Unity.SpineAtlasRegion)o;
			string ret = obj.atlasAssetField;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index atlasAssetField on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_atlasAssetField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Spine.Unity.SpineAtlasRegion obj = (Spine.Unity.SpineAtlasRegion)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.atlasAssetField = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index atlasAssetField on a nil value");
		}
	}
}

